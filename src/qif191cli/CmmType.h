// Copyright(c) Capvidia, 2020
// https://www.capvidia.com
//
// Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software
// and accompanying documentation covered by this license(the "Software") to use, reproduce, display, distribute, execute,
// and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the Software
// is furnished to do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement,
// including the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and all derivative works of the Software,
// unless such copies or derivative works are solely in the form of machine-executable object code generated by a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT.
// IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

#pragma once
#include <qifbase/Data/CmmType.h>

namespace Qif
{
/// <summary> Represents the type of CMM. </summary>
public enum class CmmType
{
    /// <summary> Moving bridge. </summary>
    MovingBridge = qifbase::MovingBridge,

    /// <summary> Fixed bridge. </summary>
    FixedBridge,

    /// <summary> Column. </summary>
    Column,

    /// <summary> Fixed table cantilever. </summary>
    FixedTableCantilever,

    /// <summary> Moving ram horizontal arm. </summary>
    MovingRamHorizontalArm,

    /// <summary> Moving table horizontal arm. </summary>
    MovingTableHorizontalArm,

    /// <summary> Gantry. </summary>
    Gantry,

    /// <summary> L-Shaped bridge. </summary>
    LShapedBridge,

    /// <summary> Fixed table horizontal arm. </summary>
    FixedTableHorizontalArm,

    /// <summary> Moving table cantilever arm. </summary>
    MovingTableCantileverArm
};

/// <summary> Methods for working with CMM type. </summary>
public ref class CmmTypeMethods abstract sealed
{
public:
    /// <summary> Gets a string representation of the given type </summary>
    /// <param name="type"> CMM type </param>
    /// <returns> String </returns>
    static System::String^ Name(CmmType type)
    {
        return gcnew System::String(qifbase::CmmTypeMethods::Name((qifbase::CmmType)type).c_str());
    }
};
}
