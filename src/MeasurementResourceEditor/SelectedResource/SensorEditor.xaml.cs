///////////////////////////////////////////////////////////////////////////////
///
/// Copyright 2018-2020, Capvidia, Metrosage, and project contributors
/// https://www.capvidia.com/
/// 
/// This software is provided for free use to the QIF Community under the 
/// following license:
/// 
/// Boost Software License - Version 1.0 - August 17th, 2003
/// https://www.boost.org/LICENSE_1_0.txt
/// 
/// Permission is hereby granted, free of charge, to any person or organization
/// obtaining a copy of the software and accompanying documentation covered by
/// this license (the "Software") to use, reproduce, display, distribute,
/// execute, and transmit the Software, and to prepare derivative works of the
/// Software, and to permit third-parties to whom the Software is furnished to
/// do so, all subject to the following:
/// 
/// The copyright notices in the Software and this entire statement, including
/// the above license grant, this restriction and the following disclaimer,
/// must be included in all copies of the Software, in whole or in part, and
/// all derivative works of the Software, unless such copies or derivative
/// works are solely in the form of machine-executable object code generated by
/// a source language processor.
/// 
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
/// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
/// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
/// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
/// DEALINGS IN THE SOFTWARE.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using MeasurementResourceEditor.MrdXml;

namespace MeasurementResourceEditor
{
    /// <summary> Interaction logic for SensorEditor.xaml. </summary>
    public partial class SensorEditor : UserControl
    {
        /// <summary> Default constructor. </summary>
        public SensorEditor()
        {
            InitializeComponent();
        }

        /// <summary> Gets the sensor currently being edited as a MeasurementResource object. </summary>
        public MeasurementResource CurrentSensor
        {
            get { return DataContext as MeasurementResource; }
        }

        /// <summary> Sets a new sensor as the item being edited </summary>
        /// <param name="sensor"> Sensor to edit </param>
        public void EditSensor(MeasurementResource sensor)
        {
            // Set the data context for this control
            DataContext = sensor;
        }

        /// <summary> Handles clicking of the "Next" button for the sensor orientations </summary>
        /// <param name="sender"> Sender </param>
        /// <param name="e"> Event arguments </param>
        private void NextSensorOrientation_Click(object sender, RoutedEventArgs e)
        {
            (DataContext as MeasurementResource).ChangeToNextSensorOrientation();
        }

        /// <summary> Handles clicking of the "Previous" button for the sensor orientations. </summary>
        /// <param name="sender"> Sender </param>
        /// <param name="e"> Event arguments </param>
        private void PreviousSensorOrientation_Click(object sender, RoutedEventArgs e)
        {
            (DataContext as MeasurementResource).ChangeToPreviousSensorOrientation();
        }
    }
}
