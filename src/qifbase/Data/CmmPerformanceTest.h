///////////////////////////////////////////////////////////////////////////////
///
/// Copyright 2018-2020, Capvidia, Metrosage, and project contributors
/// https://www.capvidia.com/
/// 
/// This software is provided for free use to the QIF Community under the 
/// following license:
/// 
/// Boost Software License - Version 1.0 - August 17th, 2003
/// https://www.boost.org/LICENSE_1_0.txt
/// 
/// Permission is hereby granted, free of charge, to any person or organization
/// obtaining a copy of the software and accompanying documentation covered by
/// this license (the "Software") to use, reproduce, display, distribute,
/// execute, and transmit the Software, and to prepare derivative works of the
/// Software, and to permit third-parties to whom the Software is furnished to
/// do so, all subject to the following:
/// 
/// The copyright notices in the Software and this entire statement, including
/// the above license grant, this restriction and the following disclaimer,
/// must be included in all copies of the Software, in whole or in part, and
/// all derivative works of the Software, unless such copies or derivative
/// works are solely in the form of machine-executable object code generated by
/// a source language processor.
/// 
/// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
/// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
/// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
/// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
/// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
/// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
/// DEALINGS IN THE SOFTWARE.

#pragma once

namespace qifbase
{
/// <summary> Represents a type of performance test. </summary>
enum CmmPerformanceTest
{
    /// <summary> ASME B89 </summary>
    B89 = 0,

    /// <summary> ISO 10360 </summary>
    Iso10360Cmm,

    /// <summary> Full Parametric Specification </summary>
    Parametric,

    /// <summary> None </summary>
    None
};

/// <summary> Methods for working with performance test type. </summary>
class CmmPerformanceTestMethods
{
public:
    /// <summary> Returns a string representation of the given type. </summary>
    /// <param name="type"> Performance test type </param>
    /// <returns> String </returns>
    static std::wstring Name(CmmPerformanceTest type)
    {
        switch(type)
        {
        case CmmPerformanceTest::B89:
            return L"B89";
        case CmmPerformanceTest::Iso10360Cmm:
            return L"ISO 10360";
        case CmmPerformanceTest::Parametric:
            return L"Full Parametric Specification";
        case CmmPerformanceTest::None:
            return L"None";
        }
        throw std::invalid_argument("Unknown type in CmmPerformanceTestMethods::Name()");
    }
};

}
